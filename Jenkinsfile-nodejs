#!/usr/bin/env groovy

import hudson.model.*
import hudson.EnvVars
import groovy.json.JsonSlurperClassic
import groovy.json.JsonBuilder
import groovy.json.JsonOutput
import java.net.URL

pipeline{
    agent any

    //parameters {
    ////string(name: 'http_proxy', defaultValue: 'http://DSZ-Proxy.wipro.com:8080'),
    //string(name: 'https_proxy', defaultValue: 'http://DSZ-Proxy.wipro.com:8080')
    //////}
    
    //define {
        
    //    def http_proxy="http://DSZ-Proxy.wipro.com:8080"
    //    def https_proxy="http://DSZ-Proxy.wipro.com:8080"
    //}
    
    //parameters {
        
    //    parameter{
     //       string(name: 'PERSON', defaultValue: 'Mr Jenkins', description: 'Who should I say hello to?'),    
     //   }
      //  parameter{        
      //      string(name: 'PERSON2', defaultValue: 'Mr Jenkins 2', description: 'Who should I say hello to?')
        //}
    //}
    
    environment {
        http_proxy = 'http://DSZ-Proxy.wipro.com:8080'
        https_proxy    = 'http://DSZ-Proxy.wipro.com:8080'
    }
    
    def env = "prod"
    
    stages{
        
        stage("Checkout from git"){
            steps {
                echo "in this checkout section"
                git credentialsId: 'f542cd34-1023-476f-8ad5-ba995e47d784', url: 'https://github.com/santoshdhanasure/Jenkinsfiles.git'
            }
        }
        
        stage("Set environmental variables"){
            steps{
            
                switch(env){
                
                    case "dev":
                        echo "IN environmental variables ${env.http_proxy}"    

                        withEnv(["HTTP_PROXY=${env.http_proxy}", "HTTPS_PROXY=${env.https_proxy}"]){
                            sh "npm config set proxy $HTTP_PROXY"
                            sh "npm config set https-proxy $HTTPS_PROXY"
                            sh "npm install"
                            sh "chmod -R a+rwx node_modules"
                        }
                    case "prod":
                        echo "In prod section"
                }
            }
        }
        
        stage("Run npm task in the background"){
            
            steps{
                sh "npm start"
                sh "npm stop"
                sh "npm start"
            }
        }
        
        //stage("Print workspace"){
            
        //    steps{
                
                //sh pwd
                
        //        sh "find / -name 'mvn'"
                
         //   }
        //}
    }
}
